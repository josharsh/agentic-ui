# This workflow used for deploy the app to dev env
on:
  workflow_dispatch:
    inputs:
      issue_id:
        type: string
        description: 'Issue ID'
        required: false

env:
  # TO_CHANGE: Please specify the inputs for your specific service
  GIT_HUB_TOKEN: ${{ secrets.GIT_HUB_TOKEN }}
  ECR_REPOSITORY: assessment-portal
  CONTAINER_NAME: dev-assessment-portal
  CLUSTER_NAME: dev-spot-cluster
  SERVICE_NAME: dev-assessment-portal
  ENV: dev
  NEXT_PUBLIC_AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_DEV }}
  NEXT_PUBLIC_AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY_DEV }}
  NEXT_PUBLIC_AWS_REGION_NAME: ${{ secrets.AWS_REGION_NAME_DEV }}
  NEXT_PUBLIC_AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME_DEV }}
  NEXT_PUBLIC_API_URL: ${{ secrets.API_URL_DEV }}

name: "[DEV] Deploy App"
jobs:
  build:
    name: Build
    runs-on: [self-hosted, eks-runner]
    outputs:
      image_registry: ${{ steps.publish_image.outputs.image_registry }}
      image_meta: ${{ steps.vars.outputs.sha_short }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Declare Github commit hash
        id: vars
        shell: bash
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Checkout ECR Publish GitHub Action Repo
        uses: actions/checkout@v2
        with:
          repository: qoala-engineering/ecr-publish-action
          token: ${{ secrets.GIT_HUB_TOKEN }}
          path: .github/actions/ecr-publish-action

      - name: Build and Push Image App
        uses: ./.github/actions/ecr-publish-action
        id: publish_image
        with:
          aws-region: ap-southeast-3
          ecr_name: ${{ env.ECR_REPOSITORY }}
          role-to-assume: arn:aws:iam::733346176650:role/devops-ci-role
          dockerfile: Dockerfile
          ecr_cache_tag: latest-app-dev
          build_args: |
            GITHUB_TOKEN=${{env.GIT_HUB_TOKEN}}
            RELEASE_VERSION=${{ needs.version-tag.outputs.version }}
            NEXT_PUBLIC_AWS_ACCESS_KEY=${{ env.NEXT_PUBLIC_AWS_ACCESS_KEY }}
            NEXT_PUBLIC_AWS_SECRET_KEY=${{ env.NEXT_PUBLIC_AWS_SECRET_KEY }}
            NEXT_PUBLIC_AWS_REGION_NAME=${{ env.NEXT_PUBLIC_AWS_REGION_NAME }}
            NEXT_PUBLIC_AWS_S3_BUCKET_NAME=${{ env.NEXT_PUBLIC_AWS_S3_BUCKET_NAME }}
            NEXT_PUBLIC_API_URL=${{ env.NEXT_PUBLIC_API_URL }}
          custom_tags: |
            latest-app-dev
            ${{ steps.vars.outputs.sha_short }}-app
            release-${{ needs.version-tag.outputs.version }}

  deploy:
    name: Deploy Dev CGK
    needs: [build]
    runs-on: [ self-hosted, eks-runner ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Checkout GitHub CodeDeploy Action Repo
        uses: actions/checkout@v2
        with:
          repository: qoala-engineering/aws-ecs-codedeploy-action
          token: ${{ secrets.GIT_HUB_TOKEN }}
          path: .github/actions/aws-ecs-codedeploy-action

      - name: Deploy ECS task definition app
        uses: ./.github/actions/aws-ecs-codedeploy-action
        with:
          role_to_assume: arn:aws:iam::733346176650:role/devops-ci-role
          aws_region: ap-southeast-3
          aws_ssm_region: ap-southeast-1
          service_name: ${{ env.SERVICE_NAME }}
          ecr_registry: ${{ needs.build.outputs.image_registry }}
          ecr_repository: ${{ env.ECR_REPOSITORY }}
          image_tag: ${{ needs.build.outputs.image_meta }}-app
          container_name: ${{ env.CONTAINER_NAME }}
          environment: ${{ env.ENV }}
          config_path: iac/service.config.yaml
          ecs_cluster: ${{ env.CLUSTER_NAME }}
          GITHUB_TOKEN: ${{ secrets.GIT_HUB_TOKEN }}
